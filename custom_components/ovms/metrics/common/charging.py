"""Charging metrics for OVMS integration."""

from homeassistant.components.sensor import (
    SensorDeviceClass,
    SensorStateClass,
)
from homeassistant.components.binary_sensor import (
    BinarySensorDeviceClass,
)
from homeassistant.const import (
    PERCENTAGE,
    UnitOfElectricCurrent,
    UnitOfElectricPotential,
    UnitOfEnergy,
    UnitOfLength,
    UnitOfPower,
    UnitOfTemperature,
    UnitOfTime,
)

# Charging metrics
CHARGING_METRICS = {
    "v.c.charging": {
        "name": "Charging Status",
        "description": "yes = currently charging",
        "icon": "mdi:battery-charging",
        "device_class": BinarySensorDeviceClass.BATTERY_CHARGING,
        "category": "charging",
    },
    "v.c.climit": {
        "name": "Charge Current Limit",
        "description": "Maximum charger output current",
        "icon": "mdi:current-ac",
        "device_class": SensorDeviceClass.CURRENT,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfElectricCurrent.AMPERE,
        "category": "charging",
    },
    "v.c.current": {
        "name": "Charge Current",
        "description": "Momentary charger output current",
        "icon": "mdi:current-ac",
        "device_class": SensorDeviceClass.CURRENT,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfElectricCurrent.AMPERE,
        "category": "charging",
    },
    "v.c.duration.full": {
        "name": "Time to Full Charge",
        "description": "Estimated time remaining for full charge",
        "icon": "mdi:timer",
        "device_class": SensorDeviceClass.DURATION,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfTime.MINUTES,
        "category": "charging",
    },
    "v.c.duration.range": {
        "name": "Time to Range Limit",
        "description": "Estimated time remaining for sufficient range",
        "icon": "mdi:timer",
        "device_class": SensorDeviceClass.DURATION,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfTime.MINUTES,
        "category": "charging",
    },
    "v.c.duration.soc": {
        "name": "Time to SOC Limit",
        "description": "Estimated time remaining for sufficient SOC",
        "icon": "mdi:timer",
        "device_class": SensorDeviceClass.DURATION,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfTime.MINUTES,
        "category": "charging",
    },
    "v.c.efficiency": {
        "name": "Charging Efficiency",
        "description": "Momentary charger efficiency",
        "icon": "mdi:battery-charging",
        "device_class": SensorDeviceClass.POWER_FACTOR,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": PERCENTAGE,
        "category": "charging",
    },
    "v.c.kwh": {
        "name": "Charge Energy",
        "description": "Energy sum for running charge",
        "icon": "mdi:battery-charging",
        "device_class": SensorDeviceClass.ENERGY,
        "state_class": SensorStateClass.TOTAL_INCREASING,
        "unit": UnitOfEnergy.KILO_WATT_HOUR,
        "category": "charging",
    },
    "v.c.kwh.grid": {
        "name": "Grid Energy Used",
        "description": "Energy drawn from grid during running session",
        "icon": "mdi:transmission-tower",
        "device_class": SensorDeviceClass.ENERGY,
        "state_class": SensorStateClass.TOTAL_INCREASING,
        "unit": UnitOfEnergy.KILO_WATT_HOUR,
        "category": "charging",
    },
    "v.c.kwh.grid.total": {
        "name": "Total Grid Energy Used",
        "description": "Energy drawn from grid total (life time)",
        "icon": "mdi:transmission-tower",
        "device_class": SensorDeviceClass.ENERGY,
        "state_class": SensorStateClass.TOTAL_INCREASING,
        "unit": UnitOfEnergy.KILO_WATT_HOUR,
        "category": "charging",
    },
    "v.c.limit.range": {
        "name": "Charge Range Limit",
        "description": "Sufficient range limit for current charge",
        "icon": "mdi:map-marker-distance",
        "device_class": SensorDeviceClass.DISTANCE,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfLength.KILOMETERS,
        "category": "charging",
    },
    "v.c.limit.soc": {
        "name": "Charge SOC Limit",
        "description": "Sufficient SOC limit for current charge",
        "icon": "mdi:battery",
        "device_class": SensorDeviceClass.BATTERY,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": PERCENTAGE,
        "category": "charging",
    },
    "v.c.mode": {
        "name": "Charge Mode",
        "description": "standard, range, performance, storage",
        "icon": "mdi:battery-charging",
        "category": "charging",
    },
    "v.c.pilot": {
        "name": "Pilot Signal",
        "description": "Pilot signal present",
        "icon": "mdi:car-connected",
        "category": "charging",
        "device_class": BinarySensorDeviceClass.CONNECTIVITY,
    },
    "v.c.power": {
        "name": "Charge Power",
        "description": "Momentary charger input power",
        "icon": "mdi:flash",
        "device_class": SensorDeviceClass.POWER,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfPower.KILO_WATT,
        "category": "charging",
    },
    "v.c.state": {
        "name": "Charge State",
        "description": "charging, topoff, done, prepare, timerwait, heating, stopped",
        "icon": "mdi:battery-charging",
        "category": "charging",
    },
    "v.c.substate": {
        "name": "Charge Substate",
        "description": "scheduledstop, scheduledstart, onrequest, timerwait, powerwait, stopped, interrupted",
        "icon": "mdi:battery-charging",
        "category": "charging",
    },
    "v.c.temp": {
        "name": "Charger Temperature",
        "description": "Charger temperature",
        "icon": "mdi:thermometer",
        "device_class": SensorDeviceClass.TEMPERATURE,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfTemperature.CELSIUS,
        "category": "charging",
    },
    "v.c.time": {
        "name": "Charging Duration",
        "description": "Duration of running charge",
        "icon": "mdi:timer",
        "device_class": SensorDeviceClass.DURATION,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfTime.SECONDS,
        "category": "charging",
    },
    "v.c.timermode": {
        "name": "Charge Timer Mode",
        "description": "yes = timer enabled",
        "icon": "mdi:timer",
        "category": "charging",
        "device_class": BinarySensorDeviceClass.RUNNING,
    },
    "v.c.timerstart": {
        "name": "Charge Timer Start",
        "description": ("Time timer is due to start, "
                        "seconds since midnight UTC"),
        "icon": "mdi:timer",
        "device_class": SensorDeviceClass.TIMESTAMP,
        "category": "charging",
    },
    "v.c.timestamp": {
        "name": "Last Charge End Time",
        "description": "Date & time of last charge end",
        "icon": "mdi:timer-off",
        "device_class": SensorDeviceClass.TIMESTAMP,
        "category": "charging",
    },
    "v.c.type": {
        "name": "Charge Type",
        "description": "Type of charger connection",
        "icon": "mdi:ev-plug-type2",
        "category": "charging",
    },
    "v.c.voltage": {
        "name": "Charge Voltage",
        "description": "Momentary charger supply voltage",
        "icon": "mdi:flash",
        "device_class": SensorDeviceClass.VOLTAGE,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfElectricPotential.VOLT,
        "category": "charging",
    },
    "v.e.charging12v": {
        "name": "12V Battery Charging",
        "description": "12V battery charging state",
        "icon": "mdi:battery-charging",
        "device_class": BinarySensorDeviceClass.BATTERY_CHARGING,
        "category": "charging",
    },
    "v.d.cp": {
        "name": "Charge Port",
        "description": "Charge port open state",
        "icon": "mdi:ev-station",
        "device_class": BinarySensorDeviceClass.DOOR,
        "category": "charging",
    },
}
