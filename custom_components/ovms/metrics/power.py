"""Power metrics for OVMS integration."""
from homeassistant.components.sensor import (
    SensorDeviceClass,
    SensorStateClass,
)
from homeassistant.components.binary_sensor import (
    BinarySensorDeviceClass,
)
from homeassistant.const import (
    PERCENTAGE,
    UnitOfElectricCurrent,
    UnitOfElectricPotential,
    UnitOfEnergy,
    UnitOfLength,
    UnitOfPower,
    UnitOfTemperature,
    UnitOfTime,
)

# Category
CATEGORY_POWER = "power"

# Power metrics
POWER_METRICS = {
    # DC/DC converter metrics
    "v.c.12v.current": {
        "name": "DC-DC Converter Current",
        "description": "Output current of DC/DC-converter",
        "icon": "mdi:current-ac",
        "device_class": SensorDeviceClass.CURRENT,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfElectricCurrent.AMPERE,
        "category": CATEGORY_POWER,
    },
    "v.c.12v.power": {
        "name": "DC-DC Converter Power",
        "description": "Output power of DC/DC-converter",
        "icon": "mdi:flash",
        "device_class": SensorDeviceClass.POWER,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfPower.WATT,
        "category": CATEGORY_POWER,
    },
    "v.c.12v.temp": {
        "name": "DC-DC Converter Temperature",
        "description": "Temperature of DC/DC-converter",
        "icon": "mdi:thermometer",
        "device_class": SensorDeviceClass.TEMPERATURE,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfTemperature.CELSIUS,
        "category": CATEGORY_POWER,
    },
    "v.c.12v.voltage": {
        "name": "DC-DC Converter Voltage",
        "description": "Output voltage of DC/DC-converter",
        "icon": "mdi:flash",
        "device_class": SensorDeviceClass.VOLTAGE,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfElectricPotential.VOLT,
        "category": CATEGORY_POWER,
    },
    
    # Generator metrics
    "v.g.generating": {
        "name": "Generating",
        "description": "Currently delivering power state",
        "icon": "mdi:flash",
        "device_class": BinarySensorDeviceClass.POWER,
        "category": CATEGORY_POWER,
    },
    "v.g.climit": {
        "name": "Generator Current Limit",
        "description": "Maximum generator input current (from battery)",
        "icon": "mdi:current-ac",
        "device_class": SensorDeviceClass.CURRENT,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfElectricCurrent.AMPERE,
        "category": CATEGORY_POWER,
    },
    "v.g.current": {
        "name": "Generator Current",
        "description": "Momentary generator input current (from battery)",
        "icon": "mdi:current-ac",
        "device_class": SensorDeviceClass.CURRENT,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfElectricCurrent.AMPERE,
        "category": CATEGORY_POWER,
    },
    "v.g.duration.empty": {
        "name": "Time to Empty",
        "description": "Estimated time remaining for full discharge",
        "icon": "mdi:timer",
        "device_class": SensorDeviceClass.DURATION,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfTime.MINUTES,
        "category": CATEGORY_POWER,
    },
    "v.g.duration.range": {
        "name": "Time to Range Limit",
        "description": "Estimated time for range limit",
        "icon": "mdi:timer",
        "device_class": SensorDeviceClass.DURATION,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfTime.MINUTES,
        "category": CATEGORY_POWER,
    },
    "v.g.duration.soc": {
        "name": "Time to SOC Limit",
        "description": "Estimated time for SOC limit",
        "icon": "mdi:timer",
        "device_class": SensorDeviceClass.DURATION,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfTime.MINUTES,
        "category": CATEGORY_POWER,
    },
    "v.g.efficiency": {
        "name": "Generator Efficiency",
        "description": "Momentary generator efficiency",
        "icon": "mdi:flash",
        "device_class": SensorDeviceClass.POWER_FACTOR,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": PERCENTAGE,
        "category": CATEGORY_POWER,
    },
    "v.g.kwh": {
        "name": "Generated Energy",
        "description": "Energy sum generated in the running session",
        "icon": "mdi:flash",
        "device_class": SensorDeviceClass.ENERGY,
        "state_class": SensorStateClass.TOTAL_INCREASING,
        "unit": UnitOfEnergy.KILO_WATT_HOUR,
        "category": CATEGORY_POWER,
    },
    "v.g.kwh.grid": {
        "name": "Grid Energy Sent",
        "description": "Energy sent to grid during running session",
        "icon": "mdi:transmission-tower",
        "device_class": SensorDeviceClass.ENERGY,
        "state_class": SensorStateClass.TOTAL_INCREASING,
        "unit": UnitOfEnergy.KILO_WATT_HOUR,
        "category": CATEGORY_POWER,
    },
    "v.g.kwh.grid.total": {
        "name": "Total Grid Energy Sent",
        "description": "Energy sent to grid total",
        "icon": "mdi:transmission-tower",
        "device_class": SensorDeviceClass.ENERGY,
        "state_class": SensorStateClass.TOTAL_INCREASING,
        "unit": UnitOfEnergy.KILO_WATT_HOUR,
        "category": CATEGORY_POWER,
    },
    "v.g.limit.range": {
        "name": "Generator Range Limit",
        "description": "Minimum range limit for generator mode",
        "icon": "mdi:map-marker-distance",
        "device_class": SensorDeviceClass.DISTANCE,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfLength.KILOMETERS,
        "category": CATEGORY_POWER,
    },
    "v.g.limit.soc": {
        "name": "Generator SOC Limit",
        "description": "Minimum SOC limit for generator mode",
        "icon": "mdi:battery",
        "device_class": SensorDeviceClass.BATTERY,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": PERCENTAGE,
        "category": CATEGORY_POWER,
    },
    "v.g.mode": {
        "name": "Generator Mode",
        "description": "Generator mode",
        "icon": "mdi:flash",
        "category": CATEGORY_POWER,
    },
    "v.g.pilot": {
        "name": "Generator Pilot Signal",
        "description": "Generator pilot signal present",
        "icon": "mdi:connection",
        "device_class": BinarySensorDeviceClass.CONNECTIVITY,
        "category": CATEGORY_POWER,
    },
    "v.g.power": {
        "name": "Generator Power",
        "description": "Momentary generator output power",
        "icon": "mdi:flash",
        "device_class": SensorDeviceClass.POWER,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfPower.KILO_WATT,
        "category": CATEGORY_POWER,
    },
    "v.g.state": {
        "name": "Generator State",
        "description": "Generator state",
        "icon": "mdi:flash",
        "category": CATEGORY_POWER,
    },
    "v.g.substate": {
        "name": "Generator Substate",
        "description": "Generator substate",
        "icon": "mdi:flash",
        "category": CATEGORY_POWER,
    },
    "v.g.temp": {
        "name": "Generator Temperature",
        "description": "Generator temperature",
        "icon": "mdi:thermometer",
        "device_class": SensorDeviceClass.TEMPERATURE,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfTemperature.CELSIUS,
        "category": CATEGORY_POWER,
    },
    "v.g.time": {
        "name": "Generator Run Time",
        "description": "Duration of generator running",
        "icon": "mdi:timer",
        "device_class": SensorDeviceClass.DURATION,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfTime.SECONDS,
        "category": CATEGORY_POWER,
    },
    "v.g.timermode": {
        "name": "Generator Timer Mode",
        "description": "Generator timer enabled state",
        "icon": "mdi:timer",
        "device_class": BinarySensorDeviceClass.RUNNING,
        "category": CATEGORY_POWER,
    },
    "v.g.timerstart": {
        "name": "Generator Timer Start",
        "description": "Time generator is due to start",
        "icon": "mdi:timer",
        "device_class": SensorDeviceClass.TIMESTAMP,
        "category": CATEGORY_POWER,
    },
    "v.g.timestamp": {
        "name": "Last Generation End Time",
        "description": "Date & time of last generation end",
        "icon": "mdi:timer-off",
        "device_class": SensorDeviceClass.TIMESTAMP,
        "category": CATEGORY_POWER,
    },
    "v.g.type": {
        "name": "Generator Connection Type",
        "description": "Connection type (chademo, ccs, â€¦)",
        "icon": "mdi:ev-plug-type2",
        "category": CATEGORY_POWER,
    },
    "v.g.voltage": {
        "name": "Generator Voltage",
        "description": "Momentary generator output voltage",
        "icon": "mdi:flash",
        "device_class": SensorDeviceClass.VOLTAGE,
        "state_class": SensorStateClass.MEASUREMENT,
        "unit": UnitOfElectricPotential.VOLT,
        "category": CATEGORY_POWER,
    },
    
    # Power state metrics
    "v.e.aux12v": {
        "name": "12V System",
        "description": "12V auxiliary system state (base system awake)",
        "icon": "mdi:power-plug",
        "device_class": BinarySensorDeviceClass.POWER,
        "category": CATEGORY_POWER,
    },
    "v.e.charging12v": {
        "name": "12V Battery Charging",
        "description": "12V battery charging state",
        "icon": "mdi:battery-charging",
        "device_class": BinarySensorDeviceClass.BATTERY_CHARGING,
        "category": CATEGORY_POWER,
    },
}
